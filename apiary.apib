byFORMAT: 1A

# Behalf API for Vendors - V3
Behalf API for Vendors describes Behalf's functionalities available for an authenticated client (vendor) by API calls.

Using this API, a remote system can create new Behalf customers, pre-approve them for loans and generate referred payments with Behalf. 

In this reference you can find information about the actions Behalf exposes and the data resources the API returns as responses to these requests.

# URL and REST Structure
Behalf’s API uses the secured https scheme only. Requests in http will be completely ignored.

All calls are sent to the Behalf domain  "**api.behalf.com**" , and for convenience reasons the prefix  **https://api.behalf.com** is omitted in all URLs mentioned in this document. 

The Behalf API calls rely on REST verbs to perform actions or to retrieve information:

Resource creation is done using the POST action, where parameters are passed in the request body.

For Example:
```
    POST /api/account/
    { "firstName": "firstname",
      "lastName": "lastname",
      "contact": {"email": "email"},
      "companyDetails": {"name": "company name"},
      "personalAddress": {"streetAddress": "street details","zipcode": "zip code"}
    }
```
Resource data is retrieved using the GET action and the associated query part of the URL.

For Example:
```
    GET /api/account/{accountId}/terms?vendor=me
```
Resource modification is done using the PUT action, where parameters are passed in the request body.

For Example:
```
    PUT /api/account/{accountId}
    { "personalAddress": {"streetAddress": "123rd 9th East st.", "zipCode": "44321"}
    }
```
Some resources’ properties can be modified directly (or indirectly) using the PATCH action.

For Example:
```
    PATCH /api/payments/{paymentId}
    { "status": "cancelled"
    }
```

Note that Resource removal (usually done by the DELETE action) is not used in this version.

# Required Headers
The Behalf API strictly requires several headers to be sent in order to perform authentication and identify legitimate requests. 
All requests must include the following headers:

**Accept**: The client should specify the desired response format. For now, only application/json is supported.

**Content-Type**: *POST*, *PATCH* and *PUT* requests must also specify the body’s format as application/json

**X-Behalf-Email**: An email address representing the current user active on the API wire. 
This field is used for audit purposes to track and differentiate between different "users" 
when a single authentication credentials set is provided for an organisation with multiple "users".

**Authorization**: An authentication token used for authentication. More details in the authentication section


# Request Parameters
Parameters used to pass information for requests are strictly defined for their contents. Requests to the API failing to provide legal values are rejected outright.

# Response Structure
Standard response structure will include the following header:

    Content-Type: application/json

## Data Types
The response body will include a JSON encoded object of the resource requested.
The JSON structure returned is limited to primitives (boolean, number, string) and compounds (array, objects, null).

Dates and DateTime elements are explicitly expected to be formatted in ISO8601.

DateTime elements accept a timezone in input but will always return a UTC formatted ISO8601 string.

Paramters that accept 'me' as input, will also accept 'ME' and 'Me'.
The API will replace those symbols with the requestor ID.



## Response Codes
Response codes indicate the way the requested action was handled:

**200**: OK - the action was executed and completed

**201**: Created - standard response to a POST action which also indicates that resource creation is also completed

**202**: Accepted - The action is queued and will be executed. 

Errors are indicated by http response code along with a corresponding human readable message. Additional details will be attached as a JSON encoded resource structure.

Standard errors are:

**400**: Parameter validation failed
            
**401**: Authentication required or failed
```
    {
        "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
        "title": "Unauthorized",
        "status": 401,
        "detail": "Unauthorized"
    }
```   
**403**: Requested resource is not available for the currently authenticated user

**404**: Resource not found

**405**: Method not allowed

**409**: Conflict

**422**: Unprocessable Entity due to input validation error
```
    {
        "validation_messages": {
            "companyDetails": {
                "name": {
                    "stringLengthTooLong": "The input is more than 25 characters long"
                }
            }
        },
        "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
        "title": "Unprocessable Entity",
        "status": 422,
        "detail": "Failed Validation"
    }
```
**500**: Resource action failed due to internal error

**503**: Resource is currently unavailable due to maintenance or overloading

**530**: Resource is currently unavailable, try again later. This response code will have a Retry-After header to suggest an estimated retry time

**531**: Related acount is missing required attributes (SSN or Address).

**532**: Credit Line Declined.

Specific application errors are returned as 500 errors in the range 530 - 580

## Hypermedia Links

The Behalf API supports Hypermedia Links as part of its standard response structure. For more information about Hypermedia Links: http://en.wikipedia.org/wiki/HATEOAS.

For a retrieved resource data (e.g. consumer), the Hypermedia Links that are provided indicate the next available steps for the current resource. Based on these links, a developer or an automated process can explore the API or get indications for the next steps in the current workflow.
This next step is described as a hyperlink URL which represents a resource. This resource can be called using http verbs normally. Note that some actions respond only to specific verbs, where an "invalid method error" (405) will be returned if a specific verb is unavailable.

You can always find out what verbs are available by using the OPTIONS http VERB on a resource.

Hypermedia Links structure example:
```
    "_links": {
        "self": {
            "href": "https://api.behalf.com/api/account/{accountId}"
        },
        "terms": {
            "href": "https://api.behalf.com/api/account/{accountId}/terms"
        },
        "additionalData": {
            "href": "https://api.behalf.com/api/additionalData/{linkId}"
        }
    }
```
# Authentication

## Oauth2
The Behalf API supports the Oauth2 grant type **client_credentials**

### Obtaining Id and Secret
A **client_id** and **client_secret** can be obtained through our Customer Support service. 
Only certified merchants and verified customers may obtain credentials for integration.

Credentials are provided as requested and only a single pair for every single user.

**Important:** Note that **client_id** value is differenet from the vendor's **supplierCompanyId** property which is used within the payloads of some calls.

### Using credentials to obtain a token
To obtain an OAuth token the following request should be sent:
```
    POST /api/oauth
    {
        "grant_type": "client_credentials",
        "client_id": <client_id>,
        "client_secret": <client_secret>,
    }
```

which will return the response:
```    
    {
      "access_token": <access_token>,
      "expires_in": 3600,
      "token_type": "Bearer",
      "scope": null
    }
```    
The **access_token** included in the reponse should be added to the Authorization header in all requests to the API.
    
    Authorization: Bearer <access_token>
    
**Important:**  Note that the token is valid for a limited time interval which is specified (in Seconds) by the **expire_in** property.

## Obtaining or Revoking Public/Private Keys

The Unique ID and the Shared Secret for communication using Behalf API can be obtained through Behalf's Customer Support service. 
Only certified vendors and verified customers may obtain these keys for integration.

Keys are provided as requested and only a single pair is provided for every single user.

# Versioning
The Behalf API supports a soft versioning policy which provides for changes in behavior, input and output options. Soft versioning means that output and input may be modified as long as it keeps backwards compatibility by not modifying or removing existing elements. Behalf is allowed to add new **optional** parameters or **new** output elements without changing the version of the API.

Any modification of input, output or behavior of an **existing** (and deployed) API must be done on a new version and allow for an essentially different API to replace the old one in the new version. Naturally, the old version must continue to work and keep to its previous behavior regardless of changes to any other version, higher or lower.

Version negotiation is done through the URL path and is optional. 
If Version is not specified within the URL path then the latest API version will be used.
An unknown or unsupported version will be rejected outright.

The format of the Version within the URL path (when used) is:
```
    /api/V3/{......}
```
# Vendor Basic Operations
There are few basic operations commonly done by vendors, using the Behalf API:

- Create a New Behalf Customer
- Add Behalf Customer Details
- Edit Behalf Customer Email
- Update Additional Data
- Retrieve Behalf Terms for a Customer
- Refer a New Payment to Behalf Customer
- Update Details of a Referred Payment
- Retrieve Payment Status
- Cancel a Referred Payment

## Create a New Behalf Customer
In order to offer Behalf Terms to his customer, a vendor should first create a Behalf Account for that customer, 
including customer's **Personal** address. 
This is done by a single API call:
- [Create an Account](#reference/accounts/account-resource/create-an-account)

## Add Behalf Customer Details
Customer's additionals details may be added later by the vendor, but only **before** the customer has signed-up to Behalf. 
This is done by a single API call:
- [Add Account Details](#reference/accounts/account-resource/add-account-details)

## Edit Behalf Customer Email
Customer's email may be modified by the vendor, but only **before** the customer has signed-up to Behalf. 
This is done by a single API call:
- [Edit Account Email](#reference/accounts/account-resource/edit-account-email)

## Update Additional Data
The vendor may provide some additional data he has regarding his Behalf customer.
This extra data may lead to an increased Credit Line of the customer.

This is done by a single API call:
- [Update Additional Data](#reference/additional-data/additional-data-resource/update-additional-data)

## Retrieve Behalf Terms for a Customer
When the vendor's customer has a Behalf Account - the vendor can get the Terms which Behalf assigns to this customer (to be used with this vendor). 
The Terms include the customer's Credit-Line, Available Balance, Max Duration, Pricing and available Repayment-Plans. 
Customer's Terms may change along time, pending on Behalf's criteria and customer's performance.
The customer's Terms are retrieved by a single API call:
- [Get Account Terms](#reference/terms/account-terms-resource/get-account-details)

**Note:** Calculation of customer's Terms, especially in the first time, may take in extreme cases up to a couple of minutes. 
In those cases the vendor will get a relevant response and should retry to retrieve the customer's Terms later (i.e. resend this request). 

## Refer a New Payment to Behalf Customer
A vendor can refer a new Payment to a Behalf customer who has sufficient available Balance.
This is done by a single API call:
- [Create a New Payment](#reference/payments/payment-resource/)

## Update Details of a Referred Payment
A vendor can only update the orderId of a referred Payment.
This is done by a single API call:
- [Update Payment Details](#reference/payments/payment-resource/update-payment-details)

## Retrieve Payment Status
In order for a referred Payment to be Approved by Behalf - it should be accepted (submitted) by the customer, after selecting his preferred repayment plan.
This may take some time as it depends on the customer's availability and response time.
The vendor may, at any point of time, get the updated status of any of his Payments.
This is done by a single API call:
- [Retrieve Payment Status](#reference/payments/payment-resource/retrieve-payment-status)

## Cancel a Referred Payment
A vendor can cancel a referred Payment any time **before** the Payment is Approved by Behalf.
This is done by a single API call:
- [Update Payment Status](#reference/payments/payment-resource/update-payment-status)

# Developer Environment (API Demo)

## Introduction
Behalf provides a Demo environment for the API - to be used by external developers. 
Requests executed on this environment will behave in a manner similar to the production environment but will not actually charge or make any payouts. 
This makes the Demo environment a safe place to try out your integration and conduct initial integration tests.

The Demo environment is designed so that it does not require real data for users, other than passing a syntax check. 
This means that some scenarios on the demo environment will behave a little differently than production.

For example:
    **Create New Account** - Will always create an account with available Credit Line regardless of account details.

## Authentication
The authentication in the Demo environment is the same as in the normal environment, 
however different credentials will be provided (by Behalf).

## How To Use
All API calls work in the Demo environment, where the only change is the base URL:

**https://api.demo.behalf.com/**

         
# Group Accounts

## Account Resource [/api/account/] 
Account resource describes a single set of credentials and an associated Company. 
This resource is available to authenticated users for posting.

### Create an Account [POST]
This action creates a new Account resource or adds **missing** information to an **existing** one. 
It cannot be used to override/replace **existing** information.
Additionally, this action creates a link between the currently authenticated user (vendor) and the created account (customer).

**Note:** Although some of the proprties are optional, it is recommended to provide as much data as possible upon account creation.

This POST can get two affirmative responses : 200 or 201

**The 201 response** indicates the resource was created successfully and the requesting user is linked to the newly created account.

**The 200 response** indicates the resource already existed and the requesting user is now linked to that account.

In either case, the same resource is returned. 

**Note:** An existing resource will be updated with new information **only** if that information is **missing** from the resource. 
An existing property will **not** be overridden by a POST (i.e. "conflicting" provided properties are ignored).


+ Request Mandatory parameters only (application/json)

    + Body

            {
                "firstName": "firstname",
                "lastName":  "lastname",
                "contact": {"email":"email"},
                "companyDetails": {"name": "company name"},
                "personalAddress": {"streetAddress": "street details (w/o city,state)","zipcode": "zip code"}
            }

    
+ Request All available parameters (application/json)
    
    + Body
    
            {
                "firstName": "firstname",
                "lastName":  "lastname",
                "contact": {"email":"email"},
                "companyDetails": {
                    "name": "company name",
                    "duns": "DUNS number",
                    "tin": "TIN code",
                    "website": "http://website.com",
                    "inceptionDate": "2002-12-25" // Date Format: ISO8601
                },
                "ssn": "9 digits or last 4 digits of SSN",
                "birthDate": "YYYY-MM-DD (Required if SSN is last 4 digits)",
                "businessAddress": {
                    "streetAddress": "",
                    "zipcode": "",
                    "apt_unit": "",
                    "phone": ""
                },
                "personalAddress": {
                    "streetAddress": "",
                    "zipcode": "",
                    "apt_unit": "",
                    "phone": ""
                }
            }


+ Response 200 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://api.behalf.com/api/account/{account-id}"
                    },
                    "terms": {
                        "href": "https://api.behalf.com/api/account/{account-id}/terms"
                    },
                    "additionalData": {
                        "href": "https://api.behalf.com/api/additionalData/{additionalData-id}"
                    }
                }
            }

+ Response 201 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://api.behalf.com/api/account/{account-id}"
                    },
                    "terms": {
                        "href": "https://api.behalf.com/api/account/{account-id}/terms"
                    },
                    "additionalData": {
                        "href": "https://api.behalf.com/api/additionalData/{additionalData-id}"
                    }
                }
            }


### Add Account Details [POST /api/account/]
Add additional details of an account (only **missing** properties of the resource which were not provided before). 

**Note:** This action can be performed by a vendor only on **his** customers' accounts, 
and only **before** an account has passed the signup process. 
After signup, a vendor can not make any changes to a customer's account.

+ Request All available parameters (application/json)
    
    + Body
    
            {
                "firstName": "firstname",
                "lastName":  "lastname",
                "contact": {"email":"email"},
                "companyDetails": {
                    "name": "company name",
                    "duns": "DUNS number",
                    "tin": "TIN code",
                    "website": "http://website.com",
                    "inceptionDate": "2002-12-25" //Also accepts unix timestamp
                },
                "ssn": "123456781",
                "businessAddress": {
                    "streetAddress": "",
                    "zipcode": "",
                    "apt_unit": "",
                    "phone": ""
                },
                "personalAddress": {
                    "streetAddress": "",
                    "zipcode": "",
                    "apt_unit": "",
                    "phone": ""
                }
            }

+ Response 200 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://api.behalf.com/api/account/{account-id}"
                    },
                    "terms": {
                        "href": "https://api.behalf.com/api/account/{account-id}/terms"
                    },
                   "additionalData": {
                        "href": "https://api.behalf.com/api/additionalData/{additionalData-id}"
                    }
                }
            }

### Edit Account Email [PUT /api/account/{accountId}]
Your customer’s email address can be edited at any point prior to sign-up.

Unlike the account details, which cannot be updated after they are submitted, 
you can edit your customer’s email address anytime prior to sign-up.

**Note:** The **accountId** parameter is the value that is returned as part of the **Create an Account** operation. 
(the **links.self** in the response). This action can be performed by a vendor only on his customers' accounts.

+ Parameters
    + accountId (required, string, `BHae12d442123`) ... Unique identifier of the /account
    
Your customer’s email address can be edited at any point prior to sign-up.

Unlike the account details, which cannot be updated after they are submitted, 
you can edit your customer’s email address anytime prior to sign-up.

+ Request (application/json)
    
    + Body
            {
                "contact":{
                    "email":"email"
                }
            }

+ Response 200 (application/json)
    
    + Body
    
            {
                "accountId": "account-id",
                "firstName": "firstname",
                "lastName": "lastname",
                "contact":{
                    "contactId": "contact-id", "email":"email"
                },
                "companyDetails": {
                    "name": "company name",
                },
                "_links": {
                    "self": {
                        "href": "https://api.behalf.com/api/account/{account-id}"
                    },
                    "terms": {
                        "href": "https://api.behalf.com/api/account/{account-id}/terms"
                    },
                   "additionalData": {
                        "href": "https://api.behalf.com/api/additionalData/{additionalData-id}"
                    }
                }
            }

# Group Additional Data

## Additional Data [/api/additionalData/{additionalDataId}]
The Additional Data resource is used to represent more information that the vendor has about the customer.

**Note:** The **additionalDataId** parameter is the value that is returned as part of the **Create New Behalf Customer** operation. 
(the **links.additionalData** in the response). 

+ Parameters
    + additionalDataId (required, string, `BHae12d442123`) ... Unique identifier of the /additionalData

### Update Additional Data [PUT /api/additionalData/{additionalDataId}]
The request body is flexibile and may include any data fields that the vendor has about that customer.

**Note:** Updated data will **overwrite** any data previously provided using this API call.


+ Request (application/json)

    The request & response bodies are flexibile and non conclusive. 
    The following is **only an example** of possible data passed to this resource, 
    where the vendor may provide more data fields he has.

    + Body
    
            {
                "industry": "finance",
                "employees": 120,
                "businessType": "partnership",
                "YearOfIncorporation": 2012
            }

+ Response 200 (application/json)

    + Body

            {
                "additionalDataId": "additionalData-id",
                "industry": "finance",
                "employees": 120,
                "businessType": "partnership",
                "yearOfIncorporation": 2012
                "_links": {
                    "self": {
                        "href": "https://api.behalf.com/api/additionalData/{additionalData-id}"
                    }
                }
            }



# Group Terms

## Account Terms Resource [/api/account/{accountId}/terms?vendor=me]
This is an Account sub-resource that describes the account's available Behalf Terms.

**Note**: The vendor can use this resource only for **his** customers.
+ Parameters
    + accountId (required, string, `BHae12d442123`, `me`) ... Unique identifier of the /account resource

### Get Account Terms [GET]
Retrieve Terms resource for a specific account (specified by its **accountId** property) which may be used with this vendor.
The response includes the customer's Behalf terms available to be used with this vendor, such as credit-line, available balance, pricing etc.

This action may cause Terms to be recalcualted for that account.

Note that in some cases the Terms calculation may take up to a couple of minutes.
In those cases the Response will have Code **202** - "Request is In Process" - and the Terms properties will not be set.
The user (vendor) will have to post this request again in a later time (e.g. within 2-3 minutes) in order to get the Terms details.

In case the customer is not entitled for Behalf Terms - the Response will inclusde Code **532**.

+ Response 200 (application/json)

        {
            "accountId": "account-id",
            "line": 5000,
            "balance": 4500,
            "maxRepayment": 60,
            "feePer1K": 20,
            "grace": null,
            "minAmount": 300,
            "maxAmount": 5000,
            "repaymentFrequencies": "Weekly;Monthly",
            "allowExpressBankFlow": false,
            "hasBalance": true,
            "_links": {
                "self": {
                    "href": "https://api.behalf.com/api/account/{account-id}/terms"
                }
            }
        }
          
+ Response 202 (application/json)

    Request is In Process, try again within few minutes.

    + Body
    
            {
                "accountId": "account-id",
                "line": 0,
                "balance": 0,
                "maxRepayment": 0,
                "feePer1K": 0,
                "grace": null,
                "minAmount": 0,
                "maxAmount": 0,
                "repaymentFrequencies": ""
                "allowExpressBankFlow": false,
                "hasBalance": false,
                "_links": {
                    "self": {
                        "href": "https://api.behalf.com/api/account/{account-id}/terms"
                    }
                }
            }
          
+ Response 403 (application/json)
    
    Access to the account's Terms is forbidden because no link exists between the currently authenticated vendor and the customer.
    Note that in some cases, an 403 is returned when the requested Account ID does not exist, instead of the expected 404.

    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Forbidden",
                "status": 403,
                "detail": "Access to account terms is forbidden"
            } 
        
+ Response 531 (application/json)
    
    Account is missing properties, followed by a list of the missing properties.
    This list details those /account resource properties which have no value and must be entered to retrieve Terms.
    
    Entering the missing values into /account properties is done by POST to the /account with the relevant accountId.

    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Bad Request",
                "status": 531,
                "detail": "Account is missing properties: ssn"
            }
            
+ Response 532 (application/json)
    
    Account Credit Line was declined. This account currently has
    no creditline available from Behalf and cannot create payments.
    Note that this state is not permanent and may change in future GET terms checks.
    

    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Credit Line Declined",
                "status": 532,
                "detail": "The account was declined a credit line"
            }

+ Response 533 (application/json)
    
    Account is missing some Additional Data.
    Entering the missing data is done by PUT to the /AdditionalData resource with the relevant linkId.    

    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Bad request",
                "status": 533,
                "detail": "Additional data is required"
            }

# Group Payments

## Payment Resource [/api/payments/]
A resource that describes a transaction between a customer and a vendor.
A Payment object shows meta information about the payment and its current state. 
This object is used as the basis for repayment plans and enforcing the lifecycle of a transaction.

### Create a New Payment [POST /api/payments/?submit=no]

Create a new Payment entity with basic information.
Both supplierCompanyId and customerCompanyId properties must be specified explicitly.

**Note1**: The vendor can create this resource only for **his** customers 
(i.e. A vendor may only specify his own company-id in the **supplierCompanyId** property).

**Note2**: There is an optional parameter in the query string - **origin** , to be used when it's a **renewal** 
of a previously approved Payment (e.g. from last year), 
where in that case its value should be set to the **paymentId** property of the original Payment (i.e. that from last year).

**Note3**: There is an **optional** parameter in the query string - **submit** , which accepts the values **no|yes|try**. 
Passing **yes** will 
force an attempt to submit the payment, if it cannot be submitted the payment will not be created and an error will be returned. If **try** is
passed the payment will be created and submitted only if possible. 
The default value is **no**, which will create a regular referred payment which is not submitted.

The Response includes a **paymentId** property which will be used in any future requests regarding this Payment.
Note that creating a Payment sends an email to the customer inviting him to confirm and submit the Payment 
(unless it's a **renewal** of a previously approved Payment or a new payment which is **submitted** immediately, where in these cases the customer will get an email notification that a Payment was created and submitted).

+ Request Normal Payment (application/json)

    + Body

            {
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "amount": 345,
                "orderId": "976-ab-12",
                "description": "5 laptops",
                "messageToBuyer": "hello"
            }

+ Request Recurring/Renewal Payment (application/json)

    + Body

            {
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "amount": 345,
                "orderId": "976-ab-12",
                "description": "5 laptops",
                "messageToBuyer": "hello",
                "recurring": true
            }

+ Response 201 (applicatio/json)

    + Body

            {
                "paymentId": "006J000000HwiPGIAZ",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "customerCompany": {
                    "name": "Behalf Customer"
                },
                "amount": 345,
                "status": "REFERRED_TO_CUSTOMER",
                "termsAndConditions": false,
                "termsAndConditionsUrl": null,
                "orderId": "976-ab-12",
                "description": "description text",
                "messageToBuyer": "hello",
                "messageToSeller": null,
                "referred": true,
                "submissionDate": null,
                "initialDate": "2015-02-22",
                "payDate": null,
                "submitFailureReason": null,
                "recurring": false,
                "autoPay": false,
                "_links": {
                    "self": {
                        "href": "https://api.behalf.com/api/payments/006J000000HwiPGIAZ"
                    }
                }
            }

### Update Payment Details [PUT /api/payments/{paymentId}]

Update the details of a previously referred Payment. 
The detail that can be updated is only the **orderId** and only before Payment was submitted (draft status only).

**Note:** This action can be performed by a vendor only on **his** Payments. 
+ Parameters
    + paymentId (required, string, `BHae12d442123`) ... Unique identifier of the /payment resource

+ Request (application/json)

    + Body

            {
                "orderId": "976-ab-13",
                "description": "5 laptops",
                "messageToBuyer": "hello",
            }

+ Response 200 (applicatio/json)

    + Body

            {
                "paymentId": "006J000000HwiPGIAZ",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "amount": 345,
                "status": "REFERRED_TO_CUSTOMERT",
                "termsAndConditions": false,
                "termsAndConditionsUrl": null,
                "orderId": "976-ab-13",
                "messageToBuyer": "hello",
                "messageToSeller": null,
                "referred": true,
                "submissionDate": null,
                "initialDate": "2015-02-22",
                "payDate": null,
                "recurring": false,
                "vcExpirationDate": "1019"
                "_links": {
                    "self": {
                        "href": "https://api.behalf.com/api/payments/006J000000HwiPGIAZ"
                    },
                    "tnc": {
                        "href": "http://api.behalf.com/termsAndConditions"
                    }
                }
            }


### Retrieve Payment Status [GET /api/payments/{paymentId}]

Retrieve a Payment resource identified by its **paymentId** property.
Payment entities include all the relevant information held by Behalf for a particular payment, including its **status**.
The vendor may send this request at any time in order to check whether the customer already submitted the Payment (as reflected in the **status** property).

For the available status values - refer to the Appendix A

+ Parameters

    + paymentId (required, string, `BHae12d442123`) ... Unique identifier of the /payments resource
   
+ Response 200 (applicatio/json)

    + Body

            {
                "paymentId": "006J000000HwiPGIAZ",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "amount": 345,
                "status": "REFERRED_TO_CUSTOMER",
                "termsAndConditions": false,
                "termsAndConditionsUrl": null,
                "orderId": "976-ab-12",
                "messageToBuyer": "hello",
                "messageToSeller": null,
                "referred": true,
                "submissionDate": "2015-02-22",
                "initialDate": "2015-02-22",
                "payDate": null,
                "recurring": false,
                "vcExpirationDate": "1019"
                "_links": {
                    "self": {
                        "href": "https://api.behalf.com/api/payments/006J000000HwiPGIAZ"
                    },
                    "tnc": {
                        "href": "http://api.behalf.com/termsAndConditions"
                    }
                }
            }

+ Response 404 (application/json)
    
    + Body
    
            {
                "type": "http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html",
                "title": "Not found",
                "status": 404,
                "detail": "Payment does not exist"
            }


### Update Payment Status [PATCH /api/payments/{paymentId}]

This request allows the vendor to **Cancel** a specific referred Payment by setting its **status** property.

The Payment is idendified by its **paymentId** property.

**Note:**  This request can be done only **before** the Payment is Approved by Behalf.


+ Parameters

    + paymentId (required, string, `BHae12d442123`) ... Unique identifier of the /payments resource
   

+ Request (application/json)

    + Body
    
            {
                "status": "cancelled"
            }
  
+ Response 200 (application/json)

    + Body

            {
                "paymentId": "006J000000HwiPGIAZ",
                "supplierCompanyId": "001J0000011DTrDIAW",
                "customerCompanyId": "001J000001YxXxwIAF",
                "supplierCompany": {
                    "name": "Behalf Vendor"
                },
                "amount": 345,
                "status": "CANCELLED_BY_SUPPLIER",
                "termsAndConditions": false,
                "termsAndConditionsUrl": null,
                "orderId": "976-ab-12",
                "messageToBuyer": "hello",
                "messageToSeller": null,
                "referred": true,
                "submissionDate": "2015-02-22",
                "initialDate": "2015-02-22",
                "payDate": null,
                "recurring": false,
                "vcExpirationDate": "1019"
                "_links": {
                    "self": {
                        "href": "https://api.behalf.com/api/payments/006J000000HwiPGIAZ"
                    },
                    "tnc": {
                        "href": "http://api.behalf.com/termsAndConditions"
                    }
                }
            }

# Group Workflow

## Token Resource [/api/token]
A token represents a user tracked action that is expected to lead to a particular system workflow, such as invite or other conversion of state.

### Invite a customer by token or email [POST]
This action creates a new token and start its associated workflow.

**Account based invite (invite)**

The token creation will trigger an invite email that will be sent to the customer. The link in the email includes this token. This token requires an existing account

This token should be used in 2 main scenarios:

1. To invite a customer who doesn’t have a payment to complete the qualification process.
2. To invite customers, who their "Get Account Terms" call ended with 531 response: "Account is missing properties: ssn", to provide this information as part of the qualification process.

**Email based invite (customerInvite):**

The "customerInvite" token type creates and sends an email invitation to a new customer. The invitation will send the new customer down the signup workflow and at its end the initiating vendor gets an email notification.
This operation should be used to invite a customer who has no existing account in the system.

The token generated for this operation is a random nonce and is not to be kept. The link in the email will be a global vendor link which is reused.


+ Request (application/json)

    + Body

            {
                "type": "invite",
                "accountId": "account-id"
            }

+ Response 201 (application/json)

    + Body

            {
                "token": "random-token",
                "accountId": "account-id"
            }
            
+ Request (application/json)

    + Body

            {
                "type": "generateUrl",
                "accountId": "account-id"
            }

+ Response 201 (application/json)

    + Body

            {
                "token": "random-token",
                "_links": {
                    "referredSignUp": {
                            "href": "https://app.behalf.com/users/signup?utm_campaign=soft-invite&utm_medium=email&token=random-token"
                    }
                }
            }

+ Request (application/json)

    + Body

            {
                "type": "customerInvite",
                "email": "customer-email@darkstar.com"
            }

+ Response 201 (application/json)

    + Body

            {
                "token": "random-token",
                "type": "customerInvite"
            }

            
# Group Appendix A: API Calls Parameters

More details regarding the API calls parameters 
(i.e. which are mandatory and which are optional, the property's Type and meaning etc) can be found [here](https://docs.google.com/a/zazma.com/document/d/1rGATWr_EgbGg739Z39FAl0ubb2ODeVGdcaPE4Kn6Clk/edit?usp=sharing)

# Group Appendix B: Vendor Workflow Diagram

![Alt tag](https://s3.amazonaws.com/api-documents/preapprove-workflow.png "Vendor Workflow Diagram")

# Group Appendix C: Testing Various Scenarios

In order to test various scenarios you should use special customer Accounts - i.e. with specific **companyDetails.name** values.

Following are the available scenarios and the associated required Company Names:

| Scenario     | API Call          | Response | Special Account Name                                                                  | Additional info|
|--------------|-------------------|----------|-----------------------------------------------------------------------------------------|----------------|
| Credit Line Declined| Get Account Terms |  532     | any company name that contains the string **declined** (case insenative)  | -              | 
| Credit Line calculation In Process| Get Account Terms | 202 | any company name that contains the string **inprocess** (case insenative) | changed automatically to Approved (200) after 1 min|
| Missing Attribute to preform calculation (SSN-Required) | Get Account Terms | 531 | any company name that contains the string **ssn** (case insenative) | - |
| Credit Line Approved| Get Account Terms |  200     | all other company names | -              |
| Credit Line Approved with ExpressBank| Get Account Terms |  200     | any company name that contains the string **express** (case insenative) | -              |

In order to test various scenarios you should use special Payment values - i.e. with specific **orderId** values.

Following are the available scenarios and the associated required Payment details:

| Scenario     | API Call          | Response | Special orderId Value                                                                 | Special description Value | Special amount Value 
|--------------|-------------------|----------|-----------------------------------------------------------------------------------------|----------------|--------|
| Payment status SUBMITTED_DECLINED | Get Payment Status | 200 | any orderId value that contains the string **decline** (case insenative) | any description value that contians the string **autosubmit** | - | 
| Payment status CUSTOMER_SUBMITED_REVIEW | Get Payment Status | 200 | any orderId value that contains the string **review** (case insenative) | any description value that contians the string **autosubmit** | When the **amount** is lower than $10,000 the status will be changed automatically to APPROVED_PAYMENT_GENERATED after 2 min; Otherwise - it will stay in CUSTOMER_SUBMITED_REVIEW |
| Payment status APPROVED_PAYMENT_GENERATED| Get Payment Status | 200 | any OrderId value that doesn't contain the string **decline** OR **inprogress** | any description value that contians the string **autosubmit** (case insenative) | - |
| Payment status REFFERED_TO_CUSTOMER| Get Payment Status | 200 | any OrderId value including decline and review | description doesn't contian the string **autosubmit** (case insenative) | - |